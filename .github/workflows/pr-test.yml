# .github/workflows/pr-test.yml
name: PR Test Workflow

# Trigger this workflow when a pull request targets main or dev-abgabe
on:
  pull_request:
    branches: [main, dev-abgabe]

# Shared environment variables used across all jobs
env:
  BACKEND_NAME: conduit-backend         # Used as backend folder and image name
  FRONTEND_NAME: conduit-frontend       # Used as frontend folder and image name
  CORS_ALLOWED_ORIGINS: http://localhost:8282  # Dummy CORS origin for backend
  SECRET_KEY_Django: ci-placeholder-key   # Dummy secret key for Django
  API_URL: https://dummy.api.url          # Dummy API URL for frontend build
  DJANGO_SUPERUSER_USERNAME: YOUR_ADMIN_USERNAME       # Dummy User for Backend 
  DJANGO_SUPERUSER_EMAIL: YOUR_ADMIN_EMAIL@example.local # Dummy Email for Backend
  DJANGO_SUPERUSER_PASSWORD: YOUR_ADMIN_PASSWORD  # Dummy Password for Backend
      
jobs:
  backend-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository including submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Build backend Docker image
      - name: Build backend image
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.BACKEND_NAME }}
          file: ${{ env.BACKEND_NAME }}/Dockerfile
          push: false
          tags: ${{ env.BACKEND_NAME }}
          build-args: |
            CORS_ALLOWED_ORIGINS=${{ env.CORS_ALLOWED_ORIGINS }}
            SECRET_KEY_Django=${{ env.SECRET_KEY_Django }}

      # Run backend container to check if Gunicorn starts correctly
      - name: Run backend container
        run: |
          docker run --rm \
          -v $(pwd)/ci_artifacts:/ci_artifacts \
          -e CI_MODE=true \
          -e CORS_ALLOWED_ORIGINS="${{ env.CORS_ALLOWED_ORIGINS }}" \
          -e SECRET_KEY_Django="${{ env.SECRET_KEY_Django }}" \
          -e DJANGO_SUPERUSER_USERNAME="${{ env.DJANGO_SUPERUSER_USERNAME }}" \
          -e DJANGO_SUPERUSER_EMAIL="${{ env.DJANGO_SUPERUSER_EMAIL }}" \
          -e DJANGO_SUPERUSER_PASSWORD="${{ env.DJANGO_SUPERUSER_PASSWORD }}" \
          ${{ env.BACKEND_NAME }}
      
      # Check the CI status for Backend
      - name: Check CI status
        run: |
          if [ -f /tmp/ci_status.txt ]; then
            source /tmp/ci_status.txt
            if [ "$CI_SUCCESS" = "true" ]; then
              echo "CI confirmed: Gunicorn config passed."
            else
              echo "CI failed: Gunicorn config check failed."
              exit 1
            fi
          else
            echo "CI status file missing. Assuming failure."
            exit 1
          fi

  frontend-tests:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository including submodules
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      # Build frontend Docker image
      - name: Build frontend image
        uses: docker/build-push-action@v3
        with:
          context: ${{ env.FRONTEND_NAME }}
          file: ${{ env.FRONTEND_NAME }}/Dockerfile
          push: false
          tags: ${{ env.FRONTEND_NAME }}
          build-args: |
            API_URL=${{ env.API_URL }}

      # Run frontend container to check if Nginx starts correctly
      - name: Run frontend container
        run: docker run --rm ${{ env.FRONTEND_NAME }}
